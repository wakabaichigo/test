
aki@Lenovo-PC MINGW64 ~/Desktop
$ ls -al ~/.ssh
ls: cannot access /c/Users/aki/.ssh: No such file or directory

aki@Lenovo-PC MINGW64 ~/Desktop
$ ssh-keygen -t rsa -b 4096 -C "qiutianderuoye@sohu.com"
Generating public/private rsa key pair.
Enter file in which to save the key (/c/Users/aki/.ssh/id_rsa):
Created directory '/c/Users/aki/.ssh'.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /c/Users/aki/.ssh/id_rsa.
Your public key has been saved in /c/Users/aki/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:l5AXQ+ZLH4cukpvui06RNhBDQfwM0vZzWKgi5bZ9gsg qiutianderuoye@sohu.com
The key's randomart image is:
+---[RSA 4096]----+
|   =*. . .=      |
|  o =o. .+ o .   |
| o o.* oo + o .  |
|. + ..*..= = o   |
|.+ =  =oS = o    |
|.Eo o..o = .     |
|     o. o        |
|     . o         |
|     .o.+.       |
+----[SHA256]-----+

aki@Lenovo-PC MINGW64 ~/Desktop
$ eval "$(ssh-agent -s)"
Agent pid 3284

aki@Lenovo-PC MINGW64 ~/Desktop
$ ssh-add ~/.ssh/id_rsa
Enter passphrase for /c/Users/aki/.ssh/id_rsa:
Identity added: /c/Users/aki/.ssh/id_rsa (/c/Users/aki/.ssh/id_rsa)

aki@Lenovo-PC MINGW64 ~/Desktop
$ clip < ~/.ssh/id_rsa.pub

aki@Lenovo-PC MINGW64 ~/Desktop
$ ssh -T git@github.com
The authenticity of host 'github.com (192.30.252.130)' can't be established.
RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added 'github.com,192.30.252.130' (RSA) to the list of know                                                                                                                                                 n hosts.
Hi wakabaichigo! You've successfully authenticated, but GitHub does not provide                                                                                                                                                  shell access.

aki@Lenovo-PC MINGW64 ~/Desktop
$ git colone https://github.com/wakabaichigo/test.git
git: 'colone' is not a git command. See 'git --help'.

Did you mean this?
        clone

aki@Lenovo-PC MINGW64 ~/Desktop
$ git clone https://github.com/wakabaichigo/test.git
Cloning into 'test'...
remote: Counting objects: 7, done.
remote: Total 7 (delta 0), reused 0 (delta 0), pack-reused 7
Unpacking objects: 100% (7/7), done.
Checking connectivity... done.

aki@Lenovo-PC MINGW64 ~/Desktop
$ cd test

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git fetch
remote: Counting objects: 3, done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), done.
From https://github.com/wakabaichigo/test
   42c4007..c895861  master     -> origin/master

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git merge origin/master
Updating 42c4007..c895861
Fast-forward
 one.txt | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 one.txt

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git log --oneline --decorate --graph -- all

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git log --oneline --decorate --
Display all 97 possibilities? (y or n)

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git log --oneline --decorate --graph --all
* c895861 (HEAD -> master, origin/master, origin/HEAD) Create one.txt
* 42c4007 Create README.md
* 00bafe3 Initial commit

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git config --global user.name wakaba

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git config --global user.email qiutianderuoye@sohu.com

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git config --help
Launching default browser to display HTML ...

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git help-config
git: 'help-config' is not a git command. See 'git --help'.

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git help config
Launching default browser to display HTML ...

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ man git-config
bash: man: command not found

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git
usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Forward-port local commits to the updated upstream head
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git config --global --add user.name eoe

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git config user.name
eoe

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git config --get user.name
eoe

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git config --list --global
user.name=wakaba
user.email=qiutianderuoye@sohu.com
user.name=eoe

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git config --global --unset user.name
warning: user.name has multiple values

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git config --global --unset user.name eoe

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git config --list --global
user.name=wakaba
user.email=qiutianderuoye@sohu.com

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git config --global allas.co checkout

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git c
git: 'c' is not a git command. See 'git --help'.

Did you mean one of these?
        checkout
        clone
        commit
        gc

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git config --global alias.lol "log --oneline"

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git lol
c895861 Create one.txt
42c4007 Create README.md
00bafe3 Initial commit

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ cd traing/git/
bash: cd: traing/git/: No such file or directory

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git init git non bare repo
usage: git init [-q | --quiet] [--bare] [--template=<template-directory>] [--shared[=<permissions>]] [<directory>]

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git ../..
git: '../..' is not a git command. See 'git --help'.

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git init git non bare repo
usage: git init [-q | --quiet] [--bare] [--template=<template-directory>] [--shared[=<permissions>]] [<directory>]

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ cd ../..

aki@Lenovo-PC MINGW64 ~
$ git init --bare git_bare_repo
Initialized empty Git repository in C:/Users/aki/git_bare_repo/

aki@Lenovo-PC MINGW64 ~
$ cd d:

aki@Lenovo-PC MINGW64 /d
$ git init --bare git_bare_repo
Initialized empty Git repository in D:/git_bare_repo/

aki@Lenovo-PC MINGW64 /d
$ cd ^C
cd
aki@Lenovo-PC MINGW64 /d
$ cd d:/git_bare_repo

aki@Lenovo-PC MINGW64 /d/git_bare_repo (BARE:master)
$ ls
config  description  HEAD  hooks/  info/  objects/  refs/

aki@Lenovo-PC MINGW64 /d/git_bare_repo (BARE:master)
$ cd d:

aki@Lenovo-PC MINGW64 /d
$ git init git non bare git_nonbare_repo
usage: git init [-q | --quiet] [--bare] [--template=<template-directory>] [--shared[=<permissions>]] [<directory>]

aki@Lenovo-PC MINGW64 /d
$ cd d:/git

aki@Lenovo-PC MINGW64 /d/git
$ git init __bare git_bare_repo
usage: git init [-q | --quiet] [--bare] [--template=<template-directory>] [--shared[=<permissions>]] [<directory>]

aki@Lenovo-PC MINGW64 /d/git
$ git init --bare git_bare_repo
Initialized empty Git repository in D:/git/git_bare_repo/

aki@Lenovo-PC MINGW64 /d/git
$ git init git non bare repo
usage: git init [-q | --quiet] [--bare] [--template=<template-directory>] [--shared[=<permissions>]] [<directory>]

aki@Lenovo-PC MINGW64 /d/git
$ mkdir git_init_repo

aki@Lenovo-PC MINGW64 /d/git
$ cd git_init_repo

aki@Lenovo-PC MINGW64 /d/git/git_init_repo
$ git init
Initialized empty Git repository in D:/git/git_init_repo/.git/

aki@Lenovo-PC MINGW64 /d/git/git_init_repo (master)
$ cd ..

aki@Lenovo-PC MINGW64 /d/git
$ git init git_basics_repo
Initialized empty Git repository in D:/git/git_basics_repo/.git/

aki@Lenovo-PC MINGW64 /d/git
$ cd git_basics_repo

aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (master)
$ touch a
tou
aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (master)
$ touch b

aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (master)
$ git add a b

aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (master)
$ git status
On branch master

Initial commit

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   a
        new file:   b


aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (master)
$ git commit -m "Initial commit"
[master (root-commit) 1fa1543] Initial commit
 2 files changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 a
 create mode 100644 b

aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   a

no changes added to commit (use "git add" and/or "git commit -a")

aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (master)
$ git add a

aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (master)
$ git rm a
error: the following file has changes staged in the index:
    a
(use --cached to keep the file, or -f to force removal)

aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (master)
$ -f
bash: -f: command not found

aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (master)
$ git rm -f a
rm 'a'

aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        deleted:    a


aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (master)
$ git reset HEAD a
Unstaged changes after reset:
D       a

aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (master)
$ git rm --cached a
rm 'a'

aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (master)
$ git mv a c
fatal: bad source, source=a, destination=c

aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (master)
$ git mv  c a
fatal: bad source, source=c, destination=a

aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        deleted:    a


aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (master)
$ git reset HEAD a
Unstaged changes after reset:
D       a

aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        deleted:    a

no changes added to commit (use "git add" and/or "git commit -a")

aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (master)
$ git add .gitignore
fatal: pathspec '.gitignore' did not match any files

aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (master)
$ ^C

aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (master)
$ git add master.txt

aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   master.txt

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        deleted:    a
        deleted:    b


aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (master)
$ ls
master.txt

aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (master)
$ git commit -m "Initial commit on master"
[master 49e2296] Initial commit on master
 1 file changed, 1 insertion(+)
 create mode 100644 master.txt

aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (master)
$ git branch test

aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (master)
$ git checkout test
D       a
D       b
M       master.txt
Switched to branch 'test'

aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (test)
$ touch testa.txt

aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (test)
$ git add .
git
aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (test)
$ git commit -m "Initial commit on test"
[test 60aa940] Initial commit on test
 3 files changed, 2 insertions(+), 1 deletion(-)
 delete mode 100644 a
 rename b => testa.txt (100%)

aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (test)
aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (test_merge)
$ git add.
git: 'add.' is not a git command. See 'git --help'.

Did you mean this?
        add

aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (test_merge)
$ git add .
warning: LF will be replaced by CRLF in master.txt.
The file will have its original line endings in your working directory.

aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (test_merge)
$ git commit -m "Initial commit on test_merge"
[test_merge warning: LF will be replaced by CRLF in master.txt.
The file will have its original line endings in your working directory.
2296f32] Initial commit on test_merge
warning: LF will be replaced by CRLF in master.txt.
The file will have its original line endings in your working directory.
 1 file changed, 2 insertions(+), 1 deletion(-)

aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (test_merge)
$ git lol
aki@Lenovo-PC MINGW64 /d/git/git_basics_repo (master)
$ git diff
diff --git a/master.txt b/master.txt
index 7ffdfdb..95f43e1 100644
--- a/master.txt
+++ b/master.txt
@@ -1,4 +1,4 @@
 Initial commit on master
 Initial commit on testmerge
 diff in
-
git
aki@Lenovo-PC MINGW64 ~/Desktop
$ git clone https://github.com/wakabaichigo/test.git
fatal: destination path 'test' already exists and is not an empty directory.

aki@Lenovo-PC MINGW64 ~/Desktop
$ git fetch
fatal: Not a git repository (or any of the parent directories): .git
git
aki@Lenovo-PC MINGW64 ~/Desktop
$ git fetch https://github.com/wakabaichigo/test.git
fatal: Not a git repository (or any of the parent directories): .git

aki@Lenovo-PC MINGW64 ~/Desktop
$ cd test

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git fetch https://github.com/wakabaichigo/test.git
From https://github.com/wakabaichigo/test
 * branch            HEAD       -> FETCH_HEAD
lol

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ lol


[master 9ce7e28] Merge branch 'master' of https://github.com/wakabaichigo/test

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git pull
Already up-to-date.

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git add one.txt

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git commit
On branch master
Your branch is ahead of 'origin/master' by 2 commits.
  (use "git push" to publish your local commits)
nothing to commit, working directory clean


aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ ssh -T git@github.com
Warning: Permanently added the RSA host key for IP address '192.30.252.128' to the list of known hosts.
Enter passphrase for key '/c/Users/aki/.ssh/id_rsa':
Hi wakabaichigo! You've successfully authenticated, but GitHub does not provide shell access.

aki@Lenovo-PC MINGW64 ~/Desktop/test (master)
$ git push
